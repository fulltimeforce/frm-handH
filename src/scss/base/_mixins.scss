@use 'variables' as v;

/** ------ Media Queries ------ **/
@mixin phone {
    @media (max-width: v.$phone) {
        @content;
    }
}

@mixin tablet {
    @media (max-width: v.$tablet) {
        @content;
    }
}

@mixin laptop {
    @media (max-width: v.$laptop) {
        @content;
    }
}

@mixin desktop {
    @media (max-width: v.$desktop) {
        @content;
    }
}

@mixin tv {
    @media (max-width: v.$tv) {
        @content;
    }
}

@mixin fullWH {
    width: 100%;
    height: 100%;
}

@mixin transition($s: .3s) {
    transition: all $s ease;
}

@mixin flex($prop, $gap: 0) {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: $prop;
    gap: $gap;
}

@mixin grid($n, $gap: 0) {
    display: grid;
    grid-template-columns: repeat($n, 1fr);
    grid-gap: $gap;

    @include tablet {
        grid-template-columns: 1fr;
    }
}

@mixin centerX {
    left: 50%;
    transform: translateX(-50%);
}

@mixin centerY($inverse: false) {
    top: 50%;

    @if($inverse) {
        transform: translateY(-50%) scale(-1);
    }

    @else {
        transform: translateY(-50%);
    }
}

@mixin centerXY {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin square($size) {
    display: block;
    width: $size;
    height: $size;
    aspect-ratio: 1/1;
    object-fit: contain;
    object-position: center;
}

@mixin lines($n) {
    display: -webkit-box;
    -webkit-line-clamp: $n;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

@mixin pblock160($just_bottom: false) {
    @media (min-width: v.$tv) {
        @if($just_bottom ==false) {
            padding-top: px-to-vw(160px);
        }

        padding-bottom: px-to-vw(160px);
    }

    @include tv {
        @if($just_bottom ==false) {
            padding-top: 116px;
        }

        padding-bottom: 116px;
    }

    @include desktop {
        @if($just_bottom ==false) {
            padding-top: 86px;
        }

        padding-bottom: 86px;
    }

    @include tablet {
        @if($just_bottom ==false) {
            padding-top: 58px;
        }

        padding-bottom: 58px;
    }
}

@mixin pt230px {
    @media (min-width: v.$tv) {
        padding-top: px-to-vw(230px);
    }

    @include tv {
        padding-top: 170px;
    }

    @include tablet {
        padding-top: 142px;
    }
}

@mixin mt48 {
    @media (min-width: v.$tv) {
        margin-top: px-to-vw(48px);
    }

    @include tv {
        margin-top: 32px;
    }

    @include desktop {
        margin-top: 24px;
    }
}

@mixin space-left {
    @media (min-width: v.$tv) {
        padding-left: px-to-vw(312px);
    }

    @include tv {}
}

@mixin splide_arrows {
    .splide {
        width: 100%;

        &__arrows {
            width: fit-content;

            @media (min-width: v.$tv) {
                @include flex(flex-start, px-to-vw(36px));
                padding-left: px-to-vw(36px);
                margin-bottom: px-to-vw(24px);
            }

            @include tv {
                @include flex(flex-start, 26px);
                padding-left: 26px;
                margin-bottom: 18px;
            }

            @include tablet {
                padding-left: 0;
                margin-bottom: 24px;
            }
        }

        &__arrow {
            background: none !important;
            border-radius: 0 !important;

            @media (min-width: v.$tv) {
                width: px-to-vw(48px) !important;
            }

            @include tv {
                width: 36px !important;
            }

            height: auto !important;
            object-fit: contain;
            object-position: center;
            position: relative !important;
            transform: none !important;
            inset: 0 !important;

            svg {
                width: 100% !important;
                height: auto !important;
            }
        }
    }
}

// If the layout size is 1920px, the large breakpoint is 1540px.
// If the layout size is 1440px, the large breakpoint is 1200px.
@function px-to-vw($val) {
    $num: calc($val / 1px);
    $base: 1920;
    $res: calc(($num / $base) * 100 * 1vw);
    @return $res;
}

@mixin gform {

    width: 100%;

    .gsection_title,
    .gform_heading {
        display: none !important;
    }

    .gform_footer {
        @media (min-width: v.$tv) {
            margin-top: px-to-vw(16px) !important;
        }

        @include tv {
            margin-top: 12px !important;
        }
    }

    .gform-grid-row {
        margin: 0 !important;
    }

    .gform-grid-col {
        padding: 0 !important;
    }

    .has_street {
        display: grid !important;
        grid-template-columns: 1fr 1fr !important;

        &>* {
            width: 100% !important;
            inline-size: 100% !important;
        }

        @media (min-width: v.$tv) {
            column-gap: px-to-vw(12px) !important;
            row-gap: px-to-vw(16px) !important;
        }

        @include tv {
            row-gap: 12px !important;
            column-gap: 8px !important;
        }

        @include tablet {
            grid-template-columns: 100% !important;

            &>* {
                grid-column: 1/2 !important;
            }
        }
    }

    .gform_fields {
        @media (min-width: v.$tv) {
            column-gap: px-to-vw(12px) !important;
            row-gap: px-to-vw(16px) !important;
        }

        @include tv {
            row-gap: 12px !important;
            column-gap: 8px !important;
        }

        @include tablet {
            grid-template-columns: 100% !important;

            &>* {
                grid-column: 1/2 !important;
            }
        }

        .gfield_label,
        label {
            color: v.$black !important;
            opacity: 0.6 !important;
            font-family: v.$gotham_m !important;
            font-weight: 300 !important;
            display: block;
            line-height: normal !important;

            @media (min-width: v.$tv) {
                letter-spacing: px-to-vw(1.4px) !important;
                font-size: px-to-vw(14px) !important;
                margin: 0 0 px-to-vw(12px) 0 !important;
            }

            @include tv {
                font-size: 11.6px !important;
                margin: 0 0 7px 0 !important;
            }

            .gfield_required {
                display: inline-block !important;

                @media (min-width: v.$tv) {
                    margin-left: px-to-vw(4px);
                }

                @include tv {
                    margin-left: 2.4px;
                }
            }
        }
    }

    select,
    [type="submit"],
    input:not([type="submit"]),
    textarea {
        font-family: v.$gotham_light !important;
    }

    select,
    [type="submit"],
    input:not([type="submit"]),
    textarea,
    .browse_file {
        width: 100% !important;
        outline: none !important;
        box-shadow: none !important;
        border-radius: 0 !important;

        @media (min-width: v.$tv) {
            height: px-to-vw(52px) !important;
            font-size: px-to-vw(17px) !important;
        }

        @include tv {
            height: 40px !important;
            font-size: 14px !important;
            line-height: 1.2em !important;
        }
    }

    select {
        color: rgba($color: v.$black, $alpha: 0.6) !important;
        @include flex(flex-start);
    }

    select,
    input:not([type="submit"]),
    textarea {
        @media (min-width: v.$tv) {
            letter-spacing: px-to-vw(1.02px) !important;
            border: px-to-vw(1px) solid v.$light_brown !important;
            padding-inline: px-to-vw(21px) !important;
        }

        @include tv {
            border: 1px solid v.$light_brown !important;
            letter-spacing: 0.3px !important;
            padding-inline: 14px !important;
        }

        &::placeholder {
            opacity: 0.6 !important;
        }
    }

    input:not([type="submit"]),
    textarea {
        color: v.$black;
        background: v.$white !important;
    }

    [type="submit"] {
        border: none !important;
        padding: 0 !important;
        text-transform: uppercase !important;
        background: v.$light_brown !important;

        @media (min-width: v.$tv) {
            @include flex(center, px-to-vw(16px) !important);
            max-width: px-to-vw(244px) !important;
        }

        @include tv {
            @include flex(center, 10px !important);
            max-width: 180px !important;
        }

        @include tablet {
            max-width: 100% !important;
        }

        svg,
        img {
            @media (min-width: v.$tv) {
                @include square(px-to-vw(24px));
            }

            @include tv {
                @include square(17.6px);
            }
        }
    }

    textarea {
        @media (min-width: v.$tv) {
            padding-block: px-to-vw(20px) !important;
            height: px-to-vw(156px) !important;
            min-block-size: px-to-vw(156px) !important;
        }

        @include tv {
            padding-block: 13px !important;
            height: 115px !important;
            min-block-size: 115px !important;
        }
    }

    #field_3_8,
    #field_4_8 {
        background: v.$white;

        @media (min-width: v.$tv) {
            height: px-to-vw(274px);
            border: px-to-vw(2px) dashed v.$light_brown;
        }

        @include tv {
            height: 200px;
            border: 2px dashed v.$light_brown;
        }

        @include tablet {
            height: 250px;
        }


        .gfield_description,
        .gfield_label {
            display: none;
        }

        .my-filewrap {
            cursor: pointer;
            @include fullWH;
            position: relative;

            [type="file"] {
                width: 100% !important;
                height: 100% !important;
                padding: 0 !important;
            }

            img {
                @media (min-width: v.$tv) {
                    @include square(px-to-vw(56px));
                }

                @include tv {
                    @include square(40px);
                }
            }

            .ginput_container {
                @include fullWH;
                position: absolute;
                inset: 0;
                opacity: 0 !important;
                z-index: 3;

            }

            p {
                @include h3(v.$light_brown, v.$gotham_light, false);
                opacity: 0.4;
                text-align: center;

                @media (min-width: v.$tv) {
                    max-width: px-to-vw(492px);
                }

                @include tv {
                    max-width: 363px;
                }

                @include phone {
                    padding-inline: 12px;
                }
            }

            .browse_file {
                @include flex(center);
                font-family: v.$gotham_m;
                color: v.$light_brown;

                @media (min-width: v.$tv) {
                    border: px-to-vw(2px) solid v.$light_brown;
                    max-width: px-to-vw(157px);
                }

                @include tv {
                    max-width: 120px;
                    border: 2px solid v.$light_brown;
                }

                @include transition();
                margin-inline: auto;
            }

            @media (min-width: v.$tv) {
                @include flex(center, px-to-vw(32px));
                flex-direction: column;
            }

            @include tv {
                @include flex(center, 22px);
                flex-direction: column;
            }

            &:is(:hover) {
                .browse_file {
                    @media (min-width: v.$tv) {
                        max-width: px-to-vw(220px);
                    }

                    @include tv {
                        max-width: 162px;
                    }
                }
            }
        }
    }
}

@mixin p($color: v.$black, $ff: v.$gotham_light) {
    color: $color;
    font-family: $ff;
    font-weight: 300;

    @media (min-width: v.$tv) {
        font-size: px-to-vw(17px) !important;
        line-height: px-to-vw(23.8px) !important;
        letter-spacing: px-to-vw(1.02px) !important;
    }

    @include tv {
        font-size: 14.5px !important;
        line-height: 1.3em !important;
        letter-spacing: 0.4px !important;
    }
}

@mixin p2($color: v.$black, $ff: v.$gotham_light) {
    color: $color;
    font-family: $ff;
    font-weight: 300;

    @media (min-width: v.$tv) {
        font-size: px-to-vw(16px);
        line-height: px-to-vw(28.8px);
    }

    @include tv {
        font-size: 14.2px;
    }
}

@mixin p3($color: v.$light_brown, $ff: v.$gotham_m) {
    color: $color;
    font-family: $ff;
    font-weight: 300;

    @media (min-width: v.$tv) {
        font-size: px-to-vw(18px);
        line-height: px-to-vw(32.4px);
        letter-spacing: px-to-vw(1.08px);
    }

    @include tv {
        font-size: 13.8px;
        line-height: 1.32em;
        letter-spacing: 0.45px;
    }
}

@mixin mb96 {
    @media (min-width: v.$tv) {
        margin-bottom: px-to-vw(96px);
    }

    @include tv {
        margin-bottom: 68px;
    }

    @include desktop {
        margin-bottom: 52px;
    }
}

@mixin fz39($color: v.$light_brown) {
    font-family: v.$cormorant;
    font-weight: 500;
    color: $color;

    @media (min-width: v.$tv) {
        font-size: px-to-vw(39px);
        line-height: px-to-vw(46.8px);
        letter-spacing: px-to-vw(-1.17px);
    }

    @include tv {}
}

@mixin button_woocommerce($bgColor: v.$light_brown, $color: v.$white) {
    background: $bgColor !important;
    border-radius: 0 !important;
    font-family: v.$gotham_light !important;
    font-weight: 400 !important;
    color: $color !important;
    text-align: center !important;
    padding: 0 !important;
    @include flex(center);
    width: fit-content;

    @media (min-width: v.$tv) {
        -webkit-text-stroke: px-to-vw(0.5px);
        letter-spacing: px-to-vw(0.5px);

        padding-inline: px-to-vw(18px) !important;
        height: px-to-vw(44px) !important;

        font-size: px-to-vw(16px) !important;
        line-height: px-to-vw(24px) !important;
    }

    @include tv {
        padding-inline: 12.4px !important;
        height: 33px !important;
        font-size: 12px !important;
        line-height: 1.2em !important;
    }
}

@mixin fz60($color: v.$black, $text-align: center) {
    font-family: v.$cormorant;
    text-align: $text-align;
    color: $color;

    @media (min-width: v.$tv) {
        letter-spacing: px-to-vw(-1.8px);
        font-size: px-to-vw(60px);
        line-height: px-to-vw(60px);
    }

    @include tv {
        letter-spacing: -.7px;
        font-size: 42px;
        line-height: 1.2em;
    }

    @include desktop {
        font-size: 36px;
    }
}

@mixin link_actions($format: true, $width_of_buttons: 240px) {

    @media (min-width: v.$tv) {
        @include flex(center, px-to-vw(12px));
    }

    @include tv {
        @include flex(center, 9px);
    }

    a {
        @include flex(center);
        text-align: center;
        text-transform: uppercase;
        font-family: v.$gotham_m;

        @media (min-width: v.$tv) {
            letter-spacing: px-to-vw(0.8px);
            border: px-to-vw(1px) solid v.$white;
            width: px-to-vw($width_of_buttons);
            height: px-to-vw(51px);
            font-size: px-to-vw(16px);
        }

        @include tv {
            border: 1px solid v.$white;
            font-size: 12px;
            width: 180px;
            // padding-inline: 12px;
            height: 38px;
            letter-spacing: 0.4px;
        }

        @if($format) {

            &:nth-child(2),
            &:nth-child(3),
            &:nth-child(4) {
                color: v.$white;
                background: transparent;
            }

            &:nth-child(1) {
                background: v.$white;
                color: v.$black;
            }
        }

        @else {

            &:nth-child(2),
            &:nth-child(3),
            &:nth-child(4) {
                background: transparent;
                border-color: v.$light_brown;
                color: v.$light_brown;
            }

            &:nth-child(1) {
                color: v.$white;
                border-color: v.$light_brown;
                background: v.$light_brown;
            }
        }
    }
}

@mixin h1($color: v.$white, $font: v.$cormorant) {
    font-family: $font;
    font-weight: 500;
    color: $color;

    @media (min-width: v.$tv) {
        font-size: px-to-vw(95px);
        line-height: px-to-vw(105.6px);
    }

    @include tv {
        font-size: 40px;
    }

    @include desktop {
        font-size: 36px;
    }
}

@mixin h2($color: v.$black, $font: v.$goudysb) {
    font-family: $font;
    font-weight: 300;
    text-transform: uppercase;
    color: $color;

    @media (min-width: v.$tv) {
        line-height: px-to-vw(57.5px);
        font-size: px-to-vw(50px);
    }

    @include tv {
        font-size: 36px;
    }

    @include desktop {
        font-size: 30px;
    }

    span {
        display: block;
        color: v.$light_brown;
    }
}

@mixin h3($color: v.$black, $ff: v.$goudysb, $upper: true) {
    font-family: $ff;
    font-weight: 400;
    color: $color;

    @if($upper) {
        text-transform: uppercase;
    }

    @else {
        text-transform: capitalize;
    }

    @media (min-width: v.$tv) {
        line-height: px-to-vw(27.6px);
        font-size: px-to-vw(24px);
    }

    @include tv {
        font-size: 17.6px;
        line-height: 1.2em;
    }

    @include lines(3);
}

@mixin h3v2($color: v.$black, $ff: v.$goudysb, $upper: true, $max_lines: true) {
    font-family: $ff;
    font-weight: 400;
    color: $color;

    @if($upper) {
        text-transform: uppercase;
    }

    @else {
        text-transform: capitalize;
    }

    @media (min-width: v.$tv) {
        line-height: px-to-vw(28px);
        font-size: px-to-vw(20px);
    }

    @include tv {
        font-size: 17px;
    }

    @include desktop {
        font-size: 15.6px;
    }

    @if($max_lines) {
        @include lines(3);
    }
}

@mixin h4($color: v.$black, $ff: v.$goudysb, $uppercase: true) {
    color: $color;
    font-family: $ff;
    leading-trim: both;
    text-edge: cap;
    @if($uppercase){
        text-transform: uppercase;
    }

    @media (min-width: v.$tv) {
        font-size: px-to-vw(36px);
        line-height: px-to-vw(41.4px);
    }

    @include tv {
        font-size: 28px;
    }

    @include desktop {
        font-size: 22px;
    }
}

@mixin h4v2($color: v.$light_brown, $ff: v.$goudysb, $upper: true) {
    color: $color;
    font-family: $ff;
    leading-trim: both;
    text-edge: cap;

    @if($upper) {
        text-transform: uppercase;
    }

    @media (min-width: v.$tv) {
        font-size: px-to-vw(40px);
        line-height: px-to-vw(46px);
    }

    @include tv {
        font-size: 32px;
    }
}

@mixin btn1($color: white) {
    color: $color;
    width: fit-content;
    border: 1px solid $color;
    text-transform: uppercase;
    leading-trim: both;
    text-edge: cap;
    font-weight: 400;
    font-style: normal;
    line-height: normal;

    @media (min-width: v.$tv) {
        @include flex(center, px-to-vw(8px));
        height: px-to-vw(46px);
        letter-spacing: px-to-vw(0.48px);
        padding-inline: px-to-vw(20px);
        font-size: px-to-vw(16px);
    }

    @media (max-width: v.$tv) {
        @include flex(center, 5.2px);
        height: 42px;
        padding-inline: 16px;
        font-size: 15px;
    }

    svg {
        @media (min-width: v.$tv) {
            width: px-to-vw(24px);
        }

        @include tv {}

        height: auto;
        object-fit: contain;
    }
}

@mixin btn2($width, $height, $hover: true) {
    position: relative;
    leading-trim: both;
    text-edge: cap;

    width: $width;
    height: $height;
    color: v.$light_brown;
    font-family: v.$gotham_light;
    font-weight: 400;
    text-transform: uppercase;

    @if($hover ==false) {
        @media (min-width: v.$tv) {
            @include flex(center, px-to-vw(16px));
        }

        @include tv {
            @include flex(center, 16px);
        }
    }

    @media (min-width: v.$tv) {
        font-size: px-to-vw(17px);
        letter-spacing: px-to-vw(1.7px);
        border: 1px solid v.$light_brown;

        @if($hover) {
            padding-left: px-to-vw(85px);
        }
    }

    @include tv {
        @include flex(center);
        border: px-to-vw(1px) solid v.$light_brown;
        font-size: 14.5px;
        letter-spacing: 1.7px;
    }

    @include flex(flex-start);

    svg {
        @include transition;
        pointer-events: none;
        object-fit: contain;
        object-position: center;

        @if($hover) {
            position: absolute;
            @include centerY;
        }

        @media (min-width: v.$tv) {
            @if($hover) {
                width: px-to-vw(24px);
                right: px-to-vw(85px);
            }

            @else {
                width: px-to-vw(18px);
            }
        }

        @include tv {
             @if($hover) {
                width: 24px;
                right: 85px;
            }

            @else {
                width: 18px;
            }
        }

        height: auto;
    }

    @if($hover) {
        &:is(:hover, :focus) {
            @media (min-width: v.$tv) {
                padding-left: px-to-vw(105px);
            }

            @include tv {}

            svg {
                opacity: 0;
            }
        }
    }
}

@mixin breadlines($color: v.$white, $lines: 2, $reverse: false) {
    position: relative;
    width: fit-content;

    @media (min-width: v.$tv) {
        @include flex(flex-start, px-to-vw(15px));
    }

    @include tv {
        @include flex(flex-start, 12px);
    }

    p {
        color: $color;
        font-weight: 300;
        line-height: normal;
        leading-trim: both;
        text-edge: cap;
        text-transform: uppercase;

        @media (min-width: v.$tv) {
            font-size: px-to-vw(17px);
            letter-spacing: px-to-vw(1.7px);
        }

        @include tv {}
    }

    @if($reverse ==false) {
        &::before {
            content: '';
        }
    }

    @if($lines ==2 or $reverse ==true) {
        &::after {
            content: '';
        }
    }

    &::before,
    &::after {
        display: block;
        background: $color;

        @media (min-width: v.$tv) {
            width: px-to-vw(30px);
            height: px-to-vw(1px);
        }

        @include tv {
            width: 24px;
            height: 1px;
        }
    }
}

@mixin border_and_spacing_bottom($color: v.$white, $pb: true) {
    @media (min-width: v.$tv) {
        @if($pb) {
            padding-bottom: px-to-vw(17px);
        }

        @else {
            padding-bottom: px-to-vw(15px);
        }

        border-bottom: px-to-vw(1px) solid $color;
    }

    @include tv {
        @if($pb) {
            padding-bottom: 11px;
        }

        @else {
            padding-bottom: 8px;
        }

        border-bottom: 1px solid $color;
    }
}

@mixin permalink($h3: true, $color: v.$light_brown) {
    width: fit-content;

    @if($h3) {
        @include h3($color, v.$canela_text, false);
        @include border_and_spacing_bottom($color);
    }

    @else {
        @include h3v2($color, v.$canela_text, false);
        @include border_and_spacing_bottom($color, false);
    }


    @if($h3) {
        @media (min-width: v.$tv) {
            @include flex(flex-start, px-to-vw(16px));
        }

        @include tv {
            @include flex(flex-start, 10px);
        }
    }

    @else {
        @media (min-width: v.$tv) {
            @include flex(flex-start, px-to-vw(37.25px));
        }

        @include tv {
            @include flex(flex-start, 22px);
        }
        
        @include desktop{
            gap: 12px;
        }
    }

    @include tablet {
        font-size: 18px;
    }

    text-transform: capitalize;
}

@mixin icon_text_buttonReturn {

    @media (min-width: v.$tv) {
        padding-top: px-to-vw(80px);
    }

    @include tv {
        padding-top: 58px;
    }

    @include desktop {
        padding-top: 43px;
    }

    @include tablet {
        padding-top: 29px;
    }

    svg {
        @media (min-width: v.$tv) {
            @include square(px-to-vw(64px));
            margin: 0 auto px-to-vw(8px);
        }

        @include tv {
            @include square(47px);
            margin: 0 auto 4.8px;
        }
    }

    h2 {
        @include fz39;
        text-align: center;

        @media (min-width: v.$tv) {
            max-width: px-to-vw(843px);
        }

        @include tv {
            max-width: 600px;
        }

        margin-inline: auto;
    }

    a {
        @include button_woocommerce();

        @media (min-width: v.$tv) {
            margin: px-to-vw(40px) auto 0;
        }

        @include tv {
            margin: 28px auto 0;
        }
    }
}

@mixin mb64 {
    @media (min-width: v.$tv) {
        margin-bottom: px-to-vw(64px);
    }

    @include tv {
        margin-bottom: 42px;
    }

    @include tablet {
        margin-bottom: 24px;
    }
}

@mixin social_connect_in_bottom {
    @media (min-width: v.$tv) {
        @include flex(flex-start, px-to-vw(55px));
        padding-left: px-to-vw(24px);
    }

    @include tv {
        @include flex(flex-start, 32px);
        padding-left: 16px;
    }

    @include desktop {
        flex-direction: column;
        gap: 12px;
        align-items: flex-start;
        padding-left: 0;
    }

    p {
        @include p(v.$black, v.$gotham_m);
        text-align: left;
    }

    .social {
        @include social_list_link;
    }
}

@mixin fz31($minus_1px: false, $font: v.$goudysb) {
    font-family: $font;
    color: v.$black;
    font-weight: 500;
    font-style: normal;

    @media (min-width: v.$tv) {
        @if($minus_1px) {
            font-size: px-to-vw(30px);
            line-height: px-to-vw(30px);
            letter-spacing: px-to-vw(-0.9px);
        }

        @else {
            font-size: px-to-vw(31px);
            line-height: px-to-vw(35.65px);
        }
    }

    @include tv {
        @if($minus_1px) {
            font-size: 24px;
        }

        @else {
            font-size: 25px;
        }

        line-height: 1.2em;
    }

    @include desktop {
        @if($minus_1px) {
            font-size: 21.2px;
        }

        @else {
            font-size: 22px;
        }
    }
}

@mixin dropdowns {
    ul {
        width: 100%;

        .acc_head {
            @include flex(space-between, 1.5rem);
            flex-wrap: nowrap;

            @media (min-width: v.$tv) {
                padding-block: px-to-vw(49px);
                padding-right: px-to-vw(24px);
            }

            @include tv {
                padding-block: 34px;
                padding-right: 15px;
            }

            svg {
                @include transition(.45s);
            }

            h3 {
                width: fit-content;
                @include fz31;

                @media (min-width: v.$tv) {
                    @include flex(flex-start, px-to-vw(16px));
                    padding-left: px-to-vw(8px);
                }

                @include tv {
                    @include flex(flex-start, 11px);
                    padding-left: 4px;
                }

                @include desktop {
                    @include flex(flex-start, 9px);
                }

                svg {
                    @media (min-width: v.$tv) {
                        @include square(px-to-vw(56px));
                    }

                    @include tv {
                        @include square(40px);
                    }
                }
            }

            &>svg {
                @media (min-width: v.$tv) {
                    @include square(px-to-vw(18px));
                    min-width: px-to-vw(18px);
                }

                @include tv {
                    @include square(15px);
                    min-width: 15px;
                }
            }
        }

        li.acc_section {
            background: rgba($color: v.$light_brown, $alpha: 0);

            @media (min-width: v.$tv) {
                border-bottom: px-to-vw(1px) solid v.$light_brown;
            }

            @include tv {
                border-bottom: 1px solid v.$light_brown;
            }

            &:is(:hover) {
                .acc_head {
                    &>svg {
                        transform: scale(1.2) rotate(90deg);
                    }
                }
            }

            &.acc_active {
                background: rgba($color: v.$light_brown, $alpha: 0.05);
            }
        }

        .acc_content {
            @media (min-width: v.$tv) {
                padding-inline: px-to-vw(32px);
                padding-bottom: px-to-vw(48px);
            }

            @include tv {
                padding-inline: 24px;
                padding-bottom: 36px;
            }

            p,
            li,
            span,
            a {
                @include p;
                opacity: 0.9;
            }

            a {
                font-family: v.$gotham_m;
                color: v.$light_brown;
                text-decoration: underline;
            }

            b,
            strong {
                font-family: v.$gotham_m;
            }

            ul {
                list-style: disc;
            }

            ul,
            ol {
                @media (min-width: v.$tv) {
                    padding-left: px-to-vw(32px);
                }

                @include tv {
                    padding-left: 24px;
                }
            }
        }

        .description {
            width: 100%;

            @media (min-width: v.$tv) {
                max-width: px-to-vw(1033px);
            }

            &>* {
                @media (min-width: v.$tv) {
                    margin-bottom: px-to-vw(20px);
                }

                @include tv {
                    margin-bottom: 14px;
                }

                @include desktop {
                    margin-bottom: 10px;
                }
            }
        }
    }
}

@mixin container_side($space_in_right: 180px) {
    width: 100%;

    @media (min-width: v.$tv) {
        max-width: px-to-vw(calc(1428px + $space_in_right));
        padding-right: px-to-vw($space_in_right);
        margin-left: auto;
    }

    @include tv {
        padding-left: 15%;
        padding-right: 8%;
    }

    @include desktop {
        padding-left: 11%;
        padding-right: 4%;
    }

    @include laptop {
        padding-left: 4%;
    }

}

@mixin text-base($font-family, $weight, $size, $line-height: normal, $letter-spacing: normal) {
    font-family: $font-family;
    font-weight: $weight;
    font-size: $size;
    line-height: $line-height;
    letter-spacing: $letter-spacing;
}

@mixin mt40_for_actions($with_width: true) {
    @media (min-width: v.$tv) {
        @if($with_width) {
            width: px-to-vw(420px);
        }

        margin-top: px-to-vw(40px);
    }

    @include tv {
        @if($with_width) {
            width: 100%;
            max-width: 310px;
        }

        margin-top: 28px;
    }

    @include desktop {
        margin-top: 24px;
    }
}

@mixin social_list_link {
    list-style: none;

    @media (min-width: v.$tv) {
        @include flex(flex-start, px-to-vw(16px));
    }

    @include tv {
        @include flex(flex-start, 16px);
    }

    @include tablet {
        display: flex;
        gap: 20px;
        justify-content: center;
    }

    button, a {
        background: none;
        border: none;
        @media (min-width: v.$tv) {
            @include square(px-to-vw(38px));
        }

        @include tv {
            @include square(28px);
        }

        svg {
            @include fullWH;
            object-fit: contain;
            object-position: center;

            @include tablet {
                width: 32px;
                height: 32px;
            }
        }
    }
}

@mixin delete_pseudo {

    &::before,
    &::after {
        display: none !important;
    }
}

@mixin content_center($width_of_buttons: 357px) {
    .content {
        @include mt40_for_actions(false);
        @include mb64;

        li,
        p {
            @include p;
            text-align: center;
            opacity: 0.9;

            &:not(:last-child) {
                @media (min-width: v.$tv) {
                    margin-bottom: px-to-vw(24px);
                }

                @include tv {
                    margin-bottom: 16px;
                }
            }
        }

        a {
            font-family: v.$gotham_m;
            color: v.$light_brown;
            text-decoration: underline;
        }
    }

    .actions {
        @include link_actions(false, $width_of_buttons);
    }
}

@mixin buttonHeight44($bg: v.$light_brown_2) {
    width: 100% !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    border-radius: 0 !important;
    color: white !important;
    padding: 0 !important;
    margin: 0 !important;
    background: $bg !important;

    @media (min-width: v.$tv) {
        height: px-to-vw(44px) !important;
        font-size: px-to-vw(16px) !important;
    }

    @include tv {
        height: 33px !important;
        font-size: 12px !important;
    }
}

@mixin banner_with_lines() {
    width: 100%;

    @media (min-width: v.$tv) {
        padding-right: px-to-vw(16px);
        padding-bottom: px-to-vw(16px);
    }

    @include tv {
        padding-right: 10px;
        padding-bottom: 10px;
    }

    div {
        width: 100%;
        position: relative;

        @media (min-width: v.$tv) {
            height: px-to-vw(283px);
        }

        @include tv {
            height: 208px;
        }

        @include laptop {
            height: 196px;
        }

        &::after,
        &::before,
        h3 {
            position: absolute;
        }

        &::after,
        &::before {
            content: '';
            @include fullWH;
        }

        &::before {
            inset: 0;
            background: #181D24;
            opacity: 1;
        }

        &::after {
            z-index: -2;

            @media (min-width: v.$tv) {
                top: px-to-vw(16px);
                left: px-to-vw(16px);
                border: px-to-vw(1px) solid v.$light_brown;
            }

            @include tv {
                top: 10px;
                left: 10px;
                border: 1px solid v.$light_brown;
            }
        }

        h3 {
            width: 100%;
            padding-inline: 5%;
            z-index: 3;
            @include centerXY;
            text-align: center;
            @include h4(v.$white);
        }
    }

    img {
        display: block;
        @include fullWH;
        opacity: 0.2;
        pointer-events: none;
        position: relative;
        user-select: none;
        object-fit: cover;
        object-position: center;
    }
}

@mixin form-row {
    width: 100% !important;
    float: none !important;
    margin: 0 !important;
    padding: 0 !important;
    @include delete_pseudo;
}